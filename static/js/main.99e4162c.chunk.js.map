{"version":3,"sources":["StateProvider.js","reducer.js","Search.js","pages/Home.js","useGoogleSearch.js","keys.js","SearchPage.js","App.js","serviceWorker.js","index.js"],"names":["StateContext","createContext","StateProvider","reducer","initialState","children","Provider","value","useReducer","useStateValue","useContext","actionType","state","action","console","log","type","term","Search","hiddenbtns","dispatch","useState","input","setInput","history","useHistory","search","e","preventDefault","push","className","onChange","target","Button","onClick","variant","Home","href","Avatar","src","alt","useGoogleSearch","data","setData","useEffect","a","fetch","then","response","json","result","fetchData","SearchPage","to","searchInformation","formattedTotalResults","formattedSearchTime","items","map","item","link","displayLink","title","snippet","App","path","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.99e4162c.chunk.js","sourcesContent":["import React,{useReducer,createContext,useContext} from 'react';\r\n\r\nexport const StateContext = createContext();\r\n\r\nexport const StateProvider = ({ reducer, initialState, children\r\n}) => (\r\n    <StateContext.Provider value = {useReducer(reducer,\r\n    initialState)}>\r\n        {children}\r\n    </StateContext.Provider>\r\n)\r\n\r\nexport const useStateValue = () => useContext(StateContext);","export const initialState = {\r\n    term: null\r\n}\r\n\r\nexport const actionType = {\r\n    SET_SEARCH_TERM : 'SET_SEARCH_TERM'\r\n};\r\n\r\nconst reducer = (state, action) => {\r\n    console.log(action)\r\n    switch(action.type){\r\n        case actionType.SET_SEARCH_TERM:\r\n            return {\r\n                ...state,\r\n                term:action.term\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default reducer;","import React, {useState} from 'react';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport MicIcon from '@material-ui/icons/Mic';\r\nimport { Button } from '@material-ui/core';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { useStateValue } from './StateProvider';\r\nimport { actionType } from './reducer';\r\n\r\nimport './Search.css';\r\n\r\nfunction Search({hiddenbtns = false}){\r\n    const [{}, dispatch] = useStateValue();\r\n\r\n    const [input, setInput] = useState('');\r\n    const history = useHistory();\r\n\r\n    const search = e => {\r\n        e.preventDefault();\r\n        console.log(input)\r\n\r\n        dispatch({ \r\n            type:actionType.SET_SEARCH_TERM,\r\n            term:input \r\n        })\r\n\r\n        history.push('/search')\r\n    }\r\n  \r\n    return (\r\n        <form className=\"search\">\r\n            <div className=\"search-input\">\r\n                <SearchIcon className=\"search-inputIcon\"/>\r\n                    <input value = {input} onChange={e => setInput(e.target.value)}/>\r\n                <MicIcon/>\r\n            </div>\r\n\r\n            {!hiddenbtns ? (\r\n                    <div className=\"search-btns\">\r\n                       <Button type=\"submit\" onClick={search} variant=\"outlined\">Google Search</Button>\r\n                       <Button variant=\"outlined\">I'm Feeling Lucky</Button>\r\n                   </div>\r\n            ):(\r\n                    <div className=\"search-btns\">\r\n                        <Button className=\"search-btnHidden\" type=\"submit\" onClick={search} variant=\"outlined\">Google Search</Button>\r\n                        <Button className=\"search-btnHidden\" variant=\"outlined\">I'm Feeling Lucky</Button>\r\n                    </div>\r\n            )}\r\n\r\n         \r\n        </form>\r\n    )\r\n}\r\n\r\nexport default Search;","import React from 'react';\r\nimport './Home.css';\r\nimport AppIcon from '@material-ui/icons/Apps';\r\nimport { Avatar } from '@material-ui/core'\r\nimport Search from '../Search'\r\n\r\n function Home() {\r\n    return (\r\n        <div className=\"home\">\r\n            <div className=\"home-header\">                \r\n                <div className=\"header-left\">\r\n                    <a href=\"https://about.google/?utm_source=google-IN&utm_medium=referral&utm_campaign=hp-footer&fg=1\">About</a>\r\n                    <a href=\"https://store.google.com/\">Store</a>\r\n                </div>    \r\n\r\n                <div className=\"header-right\">\r\n                    <a href=\"https://www.google.com/intl/en-GB/gmail/about/#\">Gmail</a>\r\n                    <a href=\"https://www.google.co.in/imghp?hl=en&tab=wi&ogbl\">Images</a>\r\n                    <AppIcon/>\r\n                    <Avatar/>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"home-body\">\r\n                <img src=\"https://www.google.com/images/branding/googlelogo/1x/googlelogo_color_272x92dp.png\" alt=\"google-logo\"/>\r\n\r\n                <div className=\"home-inputContainer\">\r\n                    {/* SEARCH conponent */}\r\n                    <Search/>\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home;","import {useState, useEffect} from 'react'\r\nimport API_KEY from './keys';\r\n\r\nconst CONTEXT_KEY = '9ddcf09a80de24741'\r\n\r\nconst useGoogleSearch =(term) => {\r\n    const [data, setData] = useState(null)\r\n    \r\n    useEffect(()=>{\r\n        const fetchData = async() => {\r\n            fetch(\r\n                `https://www.googleapis.com/customsearch/v1?key=${API_KEY}&cx=${CONTEXT_KEY}&q=${term}`\r\n            )\r\n            .then(response => response.json())\r\n            .then(result =>{\r\n                setData(result)\r\n            })\r\n        }\r\n        fetchData();\r\n    },[term])\r\n    return { data }\r\n}\r\n\r\nexport default useGoogleSearch\r\n","export const API_KEY = \"AIzaSyC6Ao9bo7RU5A5vvYbV5xK-qQLOgeqepas\"\r\n\r\nexport default API_KEY;","import React from 'react'\r\nimport {useStateValue} from './StateProvider';\r\nimport useGoogleSearch from './useGoogleSearch';\r\nimport { Link } from 'react-router-dom'\r\nimport './SearchPage.css';\r\nimport Search from './Search';\r\nimport SearchIcon from '@material-ui/icons/Search'\r\nimport DescriptionIcon from '@material-ui/icons/Description'\r\nimport ImageIcon from '@material-ui/icons/Image'\r\nimport RoomIcon from '@material-ui/icons/Room'\r\nimport LocalOfferIcon from '@material-ui/icons/LocalOffer'\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert'\r\n\r\nfunction SearchPage() {\r\n    const [{term}, dispatch] = useStateValue();\r\n    const {data} = useGoogleSearch(term);\r\n\r\n    // TESTING\r\n    // const data = Response\r\n\r\n    console.log(data)\r\n    return (\r\n        <div className=\"search-page\">\r\n            <div className=\"searchPage-header\">\r\n                <Link to=\"/\">\r\n                    <img className=\"searchPage-logo\" src=\"https://www.google.com/images/branding/googlelogo/1x/googlelogo_color_272x92dp.png\" alt=\"goolge-logo\"/>\r\n                </Link>\r\n\r\n                <div className=\"searchPage-body\">\r\n                     <Search hiddenbtns/>\r\n\r\n\r\n                     <div className=\"options\">\r\n                        <div className=\"options-left\">\r\n                            <div className=\"searchPage-option\">\r\n                                <SearchIcon/>\r\n                                <Link to=\"/all\">All</Link>\r\n                            </div>\r\n                            <div className=\"searchPage-option\">\r\n                                <DescriptionIcon/>\r\n                                <Link to=\"/news\">News</Link>\r\n                            </div>\r\n                            <div className=\"searchPage-option\">\r\n                                <ImageIcon/>\r\n                                <Link to=\"/images\">Images</Link>\r\n                            </div>\r\n                            <div className=\"searchPage-option\">\r\n                                <LocalOfferIcon/>\r\n                                <Link to=\"/shopping\">shopping</Link>\r\n                            </div>\r\n                            <div className=\"searchPage-option\">\r\n                                <RoomIcon/>\r\n                                <Link to=\"/maps\">maps</Link>\r\n                            </div>\r\n                            <div className=\"searchPage-option\">\r\n                                <MoreVertIcon/>\r\n                                <Link to=\"/more\">more</Link>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"options-right\">\r\n                            <div className=\"searchPage-option\">\r\n                                <Link to=\"/settings\">Settings</Link>\r\n                            </div>\r\n                            <div className=\"searchPage-option\">\r\n                                <Link to=\"/tools\">Tools</Link>\r\n                            </div>\r\n                        </div>\r\n                     </div>\r\n                </div>\r\n            </div>\r\n\r\n        \r\n            {term && (\r\n                <div className=\"searchPage-results\">\r\n                    <p className=\"count\">\r\n                        About {data?.searchInformation.formattedTotalResults} results ({data?.searchInformation.formattedSearchTime}) seconds for {term}\r\n                    </p>\r\n\r\n                    {data?.items.map(item =>(\r\n                        <div className=\"searchPage-result\">\r\n                            <a className=\"link\" href={item.link}>\r\n                                {item.displayLink}\r\n                            </a>\r\n                            <a className=\"title\" href={item.link}>\r\n                                <h2>{item.title}</h2>\r\n                            </a>\r\n                            <p className=\"snippet\">\r\n                                {item.snippet}\r\n                            </p>\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n            )}\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SearchPage;\r\n\r\n\r\n","import React from 'react';\nimport './App.css';\nimport Home from './pages/Home';\nimport { BrowserRouter, Switch, Route} from 'react-router-dom';\nimport SearchPage from './SearchPage';\n\nfunction App() {\n  return (\n    <div className=\"app\">\n      <BrowserRouter>\n        <Switch>\n          <Route path=\"/search\">\n            <SearchPage/>\n          </Route>\n          <Route>\n            <Home/>\n          </Route>\n        </Switch>\n      </BrowserRouter>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport reducer, {initialState} from './reducer';\nimport {StateProvider} from './StateProvider';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <StateProvider initialState={initialState} reducer = {reducer}>\n        <App />\n    </StateProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}